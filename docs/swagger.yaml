basePath: /
definitions:
  handler.LogoutAllRequest:
    properties:
      user_id:
        type: string
    type: object
  model.Permission:
    type: object
  model.Role:
    type: object
host: localhost:8000
info:
  contact: {}
  description: Role-Permission və JWT yoxlama mikroservisi
  title: AuthZ API
  version: "1.0"
paths:
  /api/v1/authz/check:
    get:
      consumes:
      - application/json
      description: Token JWT ilə doğrulanır. İstəyə əsasən blacklist və RBAC permission
        da yoxlanır.
      parameters:
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      - default: true
        description: JWT yoxlanılsın?
        in: query
        name: check_jwt
        type: boolean
      - default: true
        description: Blacklist yoxlanılsın?
        in: query
        name: check_blacklist
        type: boolean
      - default: false
        description: RBAC yoxlanılsın?
        in: query
        name: check_rbac
        type: boolean
      - description: 'RBAC üçün icazə adı (məs: DELETE_USER)'
        in: query
        name: privilege
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Privilege is required for RBAC check
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Permission denied
          schema:
            type: string
      summary: JWT və RBAC yoxlama
      tags:
      - Authorization
  /api/v1/authz/logout:
    post:
      consumes:
      - application/json
      description: İstifadəçi tokenini blackliste əlavə edir (logout əməliyyatı).
      parameters:
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Logged out
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Logout (Tokeni deaktiv edir)
      tags:
      - Authorization
  /api/v1/authz/logout-all:
    post:
      consumes:
      - application/json
      description: Verilən `user_id`-yə aid olan bütün JWT-lərin JTI-lərini blackliste
        əlavə edir və bütün instansiyalara yayır.
      parameters:
      - description: Bloklanacaq istifadəçinin ID-si
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/handler.LogoutAllRequest'
      produces:
      - text/plain
      responses:
        "200":
          description: All user tokens blacklisted
          schema:
            type: string
        "400":
          description: user_id is required
          schema:
            type: string
      summary: İstifadəçinin bütün tokenlərini bloklayır
      tags:
      - Authorization
  /api/v1/authz/permissions:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Permission'
            type: array
        "500":
          description: Server error
          schema:
            type: string
      summary: Bütün permission-ları qaytarır
      tags:
      - Permission
    post:
      consumes:
      - application/json
      parameters:
      - description: Yeni permission
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/model.Permission'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Permission'
        "400":
          description: Invalid body
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Yeni permission yaradır
      tags:
      - Permission
  /api/v1/authz/permissions/{id}:
    delete:
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Permission-u ID ilə silir
      tags:
      - Permission
    put:
      consumes:
      - application/json
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: integer
      - description: Yenilənmiş permission məlumatı
        in: body
        name: permission
        required: true
        schema:
          $ref: '#/definitions/model.Permission'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Permission'
        "400":
          description: Invalid input
          schema:
            type: string
        "404":
          description: Permission not found
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Mövcud permission-u yeniləyir
      tags:
      - Permission
  /api/v1/authz/permissions/{id}/roles:
    get:
      parameters:
      - description: Permission ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Role'
            type: array
        "400":
          description: Invalid ID
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Verilmiş permission ID üçün aid olduğu rolları qaytarır
      tags:
      - Permission
  /api/v1/authz/permissions/permissions-with-roles:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Permission'
            type: array
        "500":
          description: Server error
          schema:
            type: string
      summary: Permission-ları və aid olduqları rolları qaytarır
      tags:
      - Permission
  /api/v1/authz/roles:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Role'
            type: array
        "500":
          description: Server error
          schema:
            type: string
      summary: Mövcud bütün rolları qaytarır
      tags:
      - Role
    post:
      consumes:
      - application/json
      parameters:
      - description: Yeni rol
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Role'
        "400":
          description: Invalid body
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Yeni rol yaradır
      tags:
      - Role
  /api/v1/authz/roles/{id}:
    delete:
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Rolu ID-yə görə silir
      tags:
      - Role
    put:
      consumes:
      - application/json
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: Yenilənmiş rol məlumatı
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/model.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Role'
        "400":
          description: Invalid input
          schema:
            type: string
        "404":
          description: Role not found
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Mövcud rolu yeniləyir
      tags:
      - Role
  /api/v1/authz/roles/{id}/permissions:
    get:
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Permission'
            type: array
        "400":
          description: Invalid ID
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Verilmiş role ID üçün permission-ları qaytarır
      tags:
      - Role
  /api/v1/authz/roles/{roleID}/permissions/{permID}:
    delete:
      parameters:
      - description: Role ID
        in: path
        name: roleID
        required: true
        type: integer
      - description: Permission ID
        in: path
        name: permID
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Role-dan permission silir
      tags:
      - Role-Permission
    post:
      parameters:
      - description: Role ID
        in: path
        name: roleID
        required: true
        type: integer
      - description: Permission ID
        in: path
        name: permID
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Role-a permission təyin edir
      tags:
      - Role-Permission
  /api/v1/authz/roles/roles-with-permissions:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Role'
            type: array
        "500":
          description: Server error
          schema:
            type: string
      summary: Rolları və onlara bağlı permission-ları qaytarır
      tags:
      - Role
swagger: "2.0"
